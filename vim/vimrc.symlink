set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim

" for Python, mainly
set tabstop=4
set expandtab
set smarttab
set shiftwidth=4
set softtabstop=4

set showcmd

" English spellchecking and spellcheck default (write way more TeX than
" anything else)
if version >= 700
   set spl=en spell
   set nospell
   autocmd BufNewFile,BufRead *.tex set spell
   autocmd BufNewFile,BufRead *.md set spell
   autocmd BufNewFile,BufRead *.txt set spell
endif

" Disable mouse in console
set mouse=

" Enable line numbers
set number

" Ignoring case in searches
set ignorecase

" Use jj as esc
inoremap jj <Esc>
nnoremap JJJJ <Nop>

" Highlight things that we find with the search
set hlsearch

" Setup clipboard to work in linux
let g:clipbrdDefaultReg = '+'

" Set off the other paren
highlight MatchParen ctermbg=4

"{{{Look and Feel

" Color Scheme
syntax on
set background=dark

" Space will toggle folds!
nnoremap <space> za

" Search mappings: These will make it so that going to the next one in a
" search will center on the line it's found in.
map N Nzz
map n nzz

" Swap ; and :  Convenient.
nnoremap ; :
nnoremap : ;

filetype plugin indent on
filetype plugin on
" Set up for markdown processing
au BufNewFile,BufRead *.md set filetype=mkd
au BufNewFile,BufRead *.md set textwidth=75
au BufNewFile,BufRead *.mdk set filetype=mkd
au BufNewFile,BufRead *.mdk set textwidth=75
au BufNewFile,BufRead *.markdown set filetype=mkd
au BufNewFile,BufRead *.markdown set textwidth=75

" Unbind the cursor keys in insert, normal and visual modes
for prefix in ['i', 'n', 'v']
    for key in ['<Up>', '<Down>', '<Left>', '<Right>']
        exe prefix . "noremap " . key . " <Nop>"
    endfor
endfor

set grepprg=grep\ -nH\ $*
let g:tex_flavor = "latex"

" just in case not in runtime path
set runtimepath=~/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,~/.vim/after

" Don't see why it shouldn't be easier to switch tabs
nnoremap t gt
nnoremap T gT

" Setting up latexsuite
let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_ViewRule_pdf = 'evince'
let g:Tex_MultipleCompileFormats = 'pdf'

" Editor encoding for latex files
set encoding=utf-8
set fileencoding=utf-8

" To stop wrap
set tw=0

" To get good tab completion in menu
" from http://stackoverflow.com/questions/526858/how-do-i-make-vim-do-normal-bash-like-tab-completion-for-file-names
set wildmode=longest,list,full
set wildmenu

" Set up backupdir
set backupdir=~/vimbackups

" For airline
set laststatus=2

" Set up pathogen
execute pathogen#infect()
" Enable the list of buffers in airline
let g:airline#extensions#tabline#enabled = 1
" and show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

" For breaking tab habits: http://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/
" This allows buffers to be hidden if you've modified a buffer.
" This is almost a must if you wish to use buffers in this way.
set hidden

" Have to set a mapleader, somehow it is unset
let mapleader=','

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
nmap <leader>T ;enew<cr>

" Move to the next buffer
nmap <leader>l ;bnext<CR>

" Move to the previous buffer
nmap <leader>h ;bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>bq ;bp <BAR> bd #<CR>

" Show all open buffers and their status
nmap <leader>bl ;ls<CR>"

" Ctrl-j/k deletes blank line below/above, and Alt-j/k inserts.
nnoremap <silent><C-j> m`:silent +g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><C-k> m`:silent -g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><C-n> :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent><C-m> :set paste<CR>m`O<Esc>``:set nopaste<CR>

" Easier window switching
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
nnoremap <C-S> <C-W><C-S>
nnoremap <C-V> <C-W><C-V>
